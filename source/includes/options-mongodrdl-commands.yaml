program: mongodrdl
name: sample
directive: commandoption
description: |
  Samples the namespaces specified by the
  :option:`--db <mongodrdl --db>`, optional
  :option:`--collection <mongodrdl --collection>`, and other
  :ref:`command line options <mongodrdl-command-line-options>` to
  output a :ref:`.drdl <drdl>` file. The ``sample`` command
  encapsulates all the :binary:`~bin.mongodrdl` behavior prior to
  version 2.11.

  .. code-block:: sh

     mongodrdl sample --db <db-name> --collection <collection-name> --out <filename>.drdl
---
program: mongodrdl
name: list-schema-ids
directive: commandoption
description: |
  Lists the string representation of the
  :ref:`ObjectId <document-bson-type-object-id>` of each stored schema
  and the date it was created.

  ``list-schema-ids`` requires the following option:
  
  .. list-table::
     :header-rows: 1
     :widths: 25 75

     * - Name
       - Description

     * - :option:`--schemaSource <mongodrdl --schemaSource>`
       - *Required.* Specifies the database where the schema information
         is stored.
  
  For example, the following command lists the schema ids in the
  ``schemas`` database:

  .. code-block:: sh

     mongodrdl list-schema-ids --schemaSource schemas

  The output resembles the following:

  .. code-block:: sh
     :copyable: false

     5d72ad695c23a9e3e26e3c85 2019-09-06T15:03:05.556Z
     5d72adea5c23a9e44882a1ad 2019-09-06T15:05:14.349Z

---
program: mongodrdl
name: list-schema-names
directive: commandoption
description: |
  Lists the name and string representation of the
  :ref:`ObjectId <document-bson-type-object-id>` for each stored schema
  that has a name.

  .. include:: /includes/fact-mongodrdl-schema-name.rst
  
  ``list-schema-names`` requires the following option:
  
  .. list-table::
     :header-rows: 1
     :widths: 25 75

     * - Name
       - Description

     * - :option:`--schemaSource <mongodrdl --schemaSource>`
       - *Required.* Specifies the database where the schema information
         is stored.

  For example, the following command returns the name and ObjectId for
  each named schema in the ``schemas`` database:

  .. code-block:: sh

     mongodrdl list-schema-names --schemaSource schemas

  The output resembles the following:

  .. code-block:: sh
     :copyable: false

     movies 5d72ad695c23a9e3e26e3c85
     theaters 5d72adea5c23a9e44882a1ad
---
program: mongodrdl
name: upload
directive: commandoption
description: |
  Uploads the schema from the specified ``.drdl`` file to the database
  specified by the :option:`--schemaSource <mongodrdl --schemaSource>`
  option. Schemas are uploaded to the ``schemas`` collection.

  ``upload`` requires the following options:

  .. list-table::
     :header-rows: 1
     :widths: 25 75

     * - Name
       - Description

     * - :option:`--schemaSource <mongodrdl --schemaSource>`
       - *Required.* Specifies the database where the schema information
         is stored.

     * - ``--drdl``
       - *Required.* Path to the ``.drdl`` file to upload.

  For example, the following command uploads the schema in the
  ``movies.drdl`` file to the ``schemas`` database:

  .. code-block:: sh

     mongodrdl upload --schemaSource schemas --drdl ./movies.drdl 

  The string representation of the
  :ref:`ObjectId <document-bson-type-object-id>` of the uploaded schema
  is returned:

  .. code-block:: sh
     :copyable: false

     5d793f3f6a26a3ce66c304ea

  To use the newly uploaded schema, restart :binary:`~bin.mongosqld`
  with the schema database specified by the
  :option:`--schemaSource <mongosqld --schemaSource>` option and
  the :option:`--schemaMode <mongosqld --schemaMode>` set to ``custom``:

  .. code-block:: sh

     mongosqld --schemaMode custom --schemaSource <schema-db>

---
program: mongodrdl
name: download
directive: commandoption
description: |
  Downloads a schema specified by its name or
  string representation of the
  :ref:`ObjectId <document-bson-type-object-id>` and prints it to the
  console.

  ``download`` accepts the following options:

  .. list-table::
     :header-rows: 1
     :widths: 20 80

     * - Name
       - Description

     * - :option:`--schemaSource <mongodrdl --schemaSource>`
       - *Required.* Specifies the database where the schema information
         is stored.

     * - ``--name``
       - The name of the schema. To learn more about naming schemas,
         see the :commandoption:`name-schema <name-schema>`
         command.

         *Required* if ``--schema`` is not specified.

     * - ``--schema``
       - The string representation of the
         :ref:`ObjectId <document-bson-type-object-id>` of the schema.

         *Required* if ``--name`` is not specified.
  
  For example, the following command prints the ``movies`` schema to the
  console:

  .. code-block:: sh

     mongodrdl download --schemaSource schemas --name movies
  
  To store the schema in a ``.drdl`` file, direct the output to the
  desired ``.drdl`` file:

  .. code-block:: sh

     mongodrdl download --schemaSource schemas --name movies > ./movies.drdl

---
program: mongodrdl
name: delete
directive: commandoption
description: |
  Deletes a schema specified by its name or
  string representation of the
  :ref:`ObjectId <document-bson-type-object-id>`. 

  ``delete`` accepts the following options:

  .. list-table::
     :header-rows: 1
     :widths: 20 80

     * - Name
       - Description

     * - :option:`--schemaSource <mongodrdl --schemaSource>`
       - *Required.* Specifies the database where the schema information
         is stored.

     * - ``--name``
       - The name of the schema. To learn more about naming schemas,
         see the :commandoption:`name-schema <mongodrdl --name-schema>`
         command.

         *Required* if ``--schema`` is not specified.

     * - ``--schema``
       - The string representation of the
         :ref:`ObjectId <document-bson-type-object-id>` of the schema.

         *Required* if ``--name`` is not specified.

  For example, the following command deletes the schema with id
  ``5d7941dc6a26a3d0fc397284`` in the ``schemas`` database:

  .. code-block:: sh

     mongodrdl delete --schemaSource schemas --schema 5d7941dc6a26a3d0fc397284
---
program: mongodrdl
name: name-schema
directive: commandoption
description: |
  Creates a new name for a schema or updates a schema's existing name.

  .. include:: /includes/fact-mongodrdl-schema-name.rst

  ``name-schema`` requires the following options:

  .. list-table::
     :header-rows: 1
     :widths: 30 70

     * - Name
       - Description

     * - :option:`--schemaSource <mongodrdl --schemaSource>`
       - *Required.* Specifies the database where the schema information
         is stored.

     * - ``--name``
       - *Required.* The new name of the schema.

     * - ``--schema``
       - *Required* The string representation of the
         :ref:`ObjectId <document-bson-type-object-id>` of the schema.

  For example, the following command names the
  ``5d72adea5c23a9e44882a1ad`` schema in the ``schemas`` database as
  ``movies``:

  .. code-block:: sh

     mongodrdl name-schema --name movies --schemaSource schemas --schema 5d72adea5c23a9e44882a1ad

...
