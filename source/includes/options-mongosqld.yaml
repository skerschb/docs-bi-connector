#  This file borrows content from other files, including
#  /includes/options-shared.yaml,
#  which uses {{program}} to refer to the tool.
#
program: mongosqld
name: help
directive: option
inherit:
  name: help
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: version
directive: option
inherit:
  name: version
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: addr
directive: option
args: null
description: |
  Specifies the host address to listen on.
optional: true
default: 127.0.0.1:3307
---
program: mongosqld
name: verbose
directive: option
aliases: -v
description: |
  Specifies that {{program}} should provide more detailed log output.

  The following table describes the information provided at each log
  level:

  .. list-table::
     :widths: 10 20 70
     :header-rows: 1

     * - Letter Option
       - Log Level
       - Message Content

     * - ``--quiet``
       - None
       - Log nothing.

     * - No flag
       - Default
       - Log messages that notify user of basic :binary:`~bin.mongosqld` 
         events and state changes.

     * - ``-v``
       - Administrator
       - Log messages that provie information to :binary:`~bin.mongosqld` 
         administrators.

     * - ``-vv``
       - Developer
       - Log messages useful to MongoDB support and development.

optional: true
---
program: mongosqld
name: schema
directive: option
args: <filename>
description: |
  Specifies the path to a schema file or the schema directory.
---
program: mongosqld
name: schemaDirectory
directive: option
args: <directoryname>
description: |

  .. deprecated:: 2.2

  Use :option:`--schema` instead.
---
program: mongosqld
name: sampleNamespaces
directive: option
args: <db.collection>
description: |
  .. versionadded:: 2.5

  ``--sampleNamespaces`` specifies a database and collection for either
  inclusion or exclusion from the data sampling process which creates
  the schema. It is also possible to specify multiple collections from
  a single databases, or multiple collections from multiple databases.
  See :ref:`examples <sampleNamespaces-example>` below.

  If you do not use the ``--sampleNamespaces`` option or the
  :option:`--schema <mongosqld --schema>` option, ``mongosqld`` samples
  data from all available MongoDB databases and collections except the
  ``admin`` and ``local`` databases.
---
program: mongosqld
name: schemaSource
directive: option
args: <db-name>
inherit:
  name: schemaSource
  program: _shared
  file: options-shared.yaml
description: |

  .. versionadded:: 2.11

  Required whenever the :option:`--schemaMode <mongosqld --schemaMode>`
  is set. Specifies the database where the schema information is stored.
  
  .. note::

     If you do not specify any of the :option:`--schema`,
     :option:`--schemaMode <mongosqld --schemaMode>`, and
     ``--schemaSource`` options, :binary:`~bin.mongosqld` holds its
     schema in memory.

  .. include:: /includes/sampling-ref-chart-link.rst
---
program: mongosqld
name: schemaName
directive: option
args: <db-name>
default: "``defaultSchema``"
description: |
  .. versionadded:: 2.11    

  Optional. The name of the schema to load from or write to
  the :option:`--schemaSource <mongosqld --schemaSource>` database.
  Specifying schema names allows you to store multiple schemas in
  the :option:`--schemaSource <mongosqld --schemaSource>` database.
  The behavior depends on on the value of
  :option:`--schemaMode <mongosqld --schemaMode>`:

  .. list-table::
     :widths: 30 70
     :header-rows: 1

     * - :option:`--schemaMode <mongosqld --schemaMode>` Value
       - ``--schemaName`` Behavior

     * - ``custom``
       - The name of the schema to load from the database specified
         by the :option:`--schemaSource <mongosqld --schemaSource>`
         option.

     * - ``auto``
       - The name of the schema to write to the :option:`--schemaSource
         <mongosqld --schemaSource>` database after the |bi-short|
         samples the schema on startup.

  If not specified, defaults to ``defaultSchema``.

  .. include:: /includes/sampling-ref-chart-link.rst

---
program: mongosqld
name: sampleSize
directive: option
args: <number>
description: |
  .. versionadded:: 2.3

  The number of documents per database to sample when gathering schema
  information.
  
  Set :option:`--sampleSize` to ``0`` to include all
  documents in the specified namespace when building the schema. If
  you do not specify a namespace, setting :option:`--sampleSize` to
  ``0`` causes :binary:`~bin.mongosqld` to consider all documents in all
  databases (excluding ``local``, ``admin``, and ``system``) when
  building the schema. See an :ref:`example <sample-size-0>` below.
default: 1000  
---
program: mongosqld
name: schemaMode
directive: option
args: <[custom|auto]>
description: |
  .. versionadded:: 2.11

  Configures the :ref:`sampling mode <sampling-mode-chart>` of
  :binary:`~bin.mongosqld`. Must be used with the
  :option:`--schemaSource <mongosqld --schemaSource>` option.
  The following values determine the sampling behavior:

  .. list-table::
     :widths: 30 70
     :header-rows: 1

     * - Value
       - ``--schemaMode`` Behavior

     * - ``custom``
       - :binary:`~bin.mongosqld` reads a stored
         schema from the MongoDB database specified by the
         :option:`--schemaSource <mongosqld --schemaSource>` option.

     * - ``auto``
       - :binary:`~bin.mongosqld`
         samples the schema and writes the schema data to the MongoDB
         database specified by the
         :option:`--schemaSource <mongosqld --schemaSource>` option.

  For more information on configuring the sample mode, see the
  :ref:`sampling-mode-chart`.

  .. include:: /includes/fact-samplemode-write-permission.rst

default: "``custom``"
---
program: mongosqld
name: schemaRefreshIntervalSecs
directive: option
args: <number>
description: |
  .. versionchanged:: 2.11

     Renamed ``--sampleRefreshIntervalSecs`` to
     ``--schemaRefreshIntervalSecs``

  The interval in seconds at which :binary:`~bin.mongosqld` re-samples
  data to create its schema. The default value is ``0``, which means
  that after the initial sampling no re-sampling occurs for the
  duration of the connection. The specified value must be a positive
  integer.

  .. include:: /includes/fact-resample-schema-data.rst

default: 0
---
program: mongosqld
name: mongo-versionCompatibility
directive: option
args: <version-number>
description: |

  Restricts {{program}} to using features that the specified version of
  MongoDB supports. Only necessary when used with replica sets in which
  members use different MongoDB versions or when performing a rolling
  upgrade of MongoDB. Only supports MongoDB version 3.2 or later.

  For example, if your replica set contains members running MongoDB
  3.2 and other members running MongoDB 3.4, set the following
  option to restrict {{program}} to only use features
  supported by MongoDB 3.2:

  .. code-block:: sh

     mongosqld --mongo-versionCompatibility 3.2

---
program: mongosqld
name: mongo-uri
directive: option
args: <uri>
description: |
  Specifies a MongoDB :ref:`connection string <mongodb-uri>` to connect to.

  The {{role}} option supports the following options within the connection
  string:

  - :urioption:`~urioption.readPreference`
  - :urioption:`~urioption.readPreferenceTags`
  - :urioption:`~urioption.replicaSet`
  - ``connect``

  For more information on these URI options see
  :ref:`Read Preference Options <connections-read-preference>` and
  :ref:`Replica Set Option <replica-set-option>`.

  For options set in the Mongo URI not included in the list above, use the
  equivalent {{program}} option. For the complete list of {{program}} options,
  see :ref:`Command Line Options <mongosqld-command-line-options>`.

  .. note::

     Instead of specifying a :urioption:`username` and :urioption:`password` in
     your connection string, run {{program}} with the :option:`--auth` option to
     direct {{program}} to pass the authentication credentials provided by the
     SQL client to the MongoDB server.

     Similarly, instead of enabling :urioption:`ssl` in the connection string,
     run {{program}} with :option:`--mongo-ssl <mongosqld --mongo-ssl>`.

  To disable automatic replica set server discovery logic and force a
  connection to the specified server, use the ``connect=direct``
  option.

  .. code-block:: shell

     mongosqld --mongo-uri "mongodb://<hostname>:<port>/?connect=direct"

  URI options not in the list above *nor* in the list of supported {{program}}
  :ref:`options <mongosqld-command-line-options>` are not supported.

optional: true
default: mongodb://localhost:27017
---
program: mongosqld
name: minimumTLSVersion
directive: option
args: <TLS1_0|TLS1_1|TLS1_2>
default: TLS1_1
description: |
  Specifies the minimum required TLS version for clients to connect to
  :binary:`~bin.mongosqld`. The default value ``TLS1_1`` corresponds
  to TLS version 1.1.
---
program: mongosqld
name: uuidSubtype3Encoding
directive: option
inherit:
  name: uuidSubtype3Encoding
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: mongo-ssl
directive: option
inherit:
  name: ssl
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: mongo-sslFIPSMode
directive: option
args: null
description: |
  Enables FIPS mode in the installed OpenSSL library.
optional: true
---
program: mongosqld
name: mongo-minimumTLSVersion
directive: option
args: <TLS1_0|TLS1_1|TLS1_2>
default: TLS1_1
description: |
  Specifies the minimum required TLS version for outgoing
  connections to a :binary:`~bin.mongod` or :binary:`~bin.mongos`.
  instance. The default value ``TLS1_1`` corresponds to TLS version
  1.1.
---
program: mongosqld
name: mongo-sslPEMKeyFile
directive: option
inherit:
  name: sslPEMKeyFile
  program: _shared
  file: options-shared.yaml
replacement:
  ssloption: ":option:`--mongo-ssl`"
---
program: mongosqld
name: mongo-sslPEMKeyPassword
directive: option
inherit:
  name: sslPEMKeyPassword
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: mongo-sslAllowInvalidCertificates
directive: option
inherit:
  name: sslAllowInvalidCertificates
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: mongo-sslAllowInvalidHostnames
directive: option
inherit:
  name: sslAllowInvalidHostnames
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: mongo-sslCAFile
directive: option
inherit:
  name: sslCAFile
  program: _shared
  file: options-shared.yaml
replacement:
  ssloption: ":option:`--mongo-ssl`"
---
program: mongosqld
name: mongo-sslCRLFile
directive: option
inherit:
  name: sslCRLFile
  program: _shared
  file: options-shared.yaml
replacement:
  ssl-option: ":option:`--mongo-ssl`"
---
program: mongosqld
name: sslMode
directive: option
args: <mode>
description: |
  .. versionadded:: 2.3

  Enable or disable :abbr:`TLS (Transport Level Security)`/:abbr:`SSL
  (Secure Sockets Layer)` for connections to :doc:`mongosqld
  </reference/mongosqld>`. The argument to the ``sslMode`` option can
  be one of the following:

  .. list-table::
     :header-rows: 1
     :widths: 20 40

     * - Value

       - Description

     * - ``disabled``

       - :doc:`mongosqld </reference/mongosqld>` cannot accept
         connections secured using TLS/SSL.

     * - ``allowSSL``

       - :doc:`mongosqld </reference/mongosqld>` can accept connections
         secured using TLS/SSL.

     * - ``requireSSL``

       - :doc:`mongosqld </reference/mongosqld>` can only accept
         connections secured using TLS/SSL.
optional: true
default: disabled
---
program: mongosqld
name: sslPEMKeyFile
directive: option
args: <filename>
description: |
  Specifies the :file:`.pem` file containing both the TLS/SSL certificate
  and key for MySQL clients. Specify the file name of the :file:`.pem`
  file using relative or absolute paths.
optional: true
---
program: mongosqld
name: sslPEMKeyPassword
directive: option
args: <password>
description: |
  Specifies the password used to decrypt the private key specified by
  :option:`--sslPEMKeyFile`.
optional: true
---
program: mongosqld
name: sslAllowInvalidCertificates
directive: option
args: null
description: |
  Permits MySQL clients to present invalid client TLS/SSL certificates.
optional: true
---
program: mongosqld
name: sslAllowInvalidHostnames
directive: option
args: null
description: |
  Permits SQL clients to connect to a {{program}} whose
  hostname differs from the hostname on its TLS/SSL certificate.
optional: true
---
program: mongosqld
name: sslCAFile
directive: option
args: <filename>
description: |
  Specifies the {{program}} :file:`.pem` file containing the root
  certificate chain from the Certificate Authority. Specify the file
  name of the :file:`.pem` file using relative or absolute paths.
optional: true
---
program: mongosqld
name: sslCRLFile
directive: option
args: <filename>
description: |
  Specifies the {{program}} :file:`.pem` file containing the
  certificate revocation list.
optional: true
---
program: mongosqld
name: auth
directive: option
args: null
description: |
  Requires authentication for incoming client requests.

  .. important::

    .. versionchanged:: 2.4.0

    When authentication is enabled, admin credentials must be provided
    with the :option:`--mongo-username <mongosqld --mongo-username>`
    and :option:`--mongo-password <mongosqld --mongo-password>`
    options or the :setting:`mongodb.net.auth.username` and
    :setting:`mongodb.net.auth.password` settings in the
    :ref:`configuration file <config-format>`.

    ``mongosqld`` uses the admin credentials to gather metadata on the
    sampled namespaces and uses the credentials of the connecting client
    to restrict data to only what the client is authorized to read. For
    more information on the required permissions for the admin user, see
    :ref:`cached-sampling-user-permissions`.

optional: true
---
program: mongosqld
name: defaultAuthSource
directive: option
args: <authSource>
description: |
  Specifies the default MongoDB authentication source.
  Set this value to specify a default source that {{program}}
  uses when authenticating with a MongoDB database. The
  authentication mechanisms
  ``GSSAPI`` and ``PLAIN`` use the ``$external`` source, while
  ``SCRAM-SHA-1`` and ``SCRAM-SHA-256`` use a MongoDB database as its
  source.

  If no value is given for this option it defaults to the the
  MongoDB ``admin`` database.

  The ``$external`` authentication source stores a reference
  to system users in a MongoDB database called ``$external``,
  but the credentials are stored in an external,
  non-MongoDB system, such as an LDAP server.

  Any connection which uses the default value can omit the
  ``source`` parameter from its :ref:`MySQL <connect-mysql-auth>`
  or :ref:`Tableau <connect-tableau-auth>` username.
optional: true
default: admin
---
program: mongosqld
name: defaultAuthMechanism
directive: option
args: <authMechanism>
description: |
  Specifies the default authentication mechanism. Set this value to
  specify a default mechanism for connecting to {{program}}. Any
  connection which uses this specified default value can omit
  the ``mechanism`` value from its :ref:`MySQL <connect-mysql-auth>` or
  :ref:`Tableau <connect-tableau-auth>` username.

  .. include:: /includes/auth-mechanisms.rst
optional: true
default: SCRAM-SHA-1
---
program: mongosqld
name: logAppend
directive: option
args: null
description: |
  Appends new logging output to an existing log file specified by
  :option:`--logPath`.

  Requires :option:`--logRotate`.
optional: true
---
program: mongosqld
name: logRotate
directive: option
args: reopen | rename
description: |

  Specifies that you want to rotate logs and how they should be
  rotated.

  When this option is set, the logs rotate when you issue a ``FLUSH
  LOGS`` command to the |bi| or when you restart ``mongosqld``.

  If you set :option:`--logRotate` to ``rename``:
     The existing log file is closed.
     An `RFC3339 <https://www.ietf.org/rfc/rfc3339.txt>`_-formatted
     timestamp is appended to the closed log file.
     A new log file is created.

  If you set :option:`--logRotate` to ``reopen``:
    The existing log file is closed and reopened.

  .. note::

     On UNIX and macOS platforms, you can issue a `SIGUSR1` signal to
     restart the ``mongosqld`` process and rotate the logs.

default: rename
optional: true
---
program: mongosqld
name: logPath
directive: option
args: <filename>
description: |
  Specifies a path to a log file for storing logging output.
default: stderr
optional: true
---
program: mongosqld
name: quiet
directive: option
inherit:
  name: quiet
  program: _shared
  file: options-shared.yaml
---
program: mongosqld
name: filePermissions
directive: option
args: <mode>
description: Specify the permissions for the Unix domain socket file.
optional: true
default: 0700
---
program: mongosqld
name: noUnixSocket
directive: option
args: null
description: Disable listening on Unix domain sockets.
optional: true
---
program: mongosqld
name: unixSocketPrefix
directive: option
args: <path>
description: |
  Specifies an alternative directory for the {{program}} Unix domain
  socket.

  {{program}} will create a socket file called ``mysql.sock`` underneath
  this path. If you do not specify {{role}}, the socket will exist at
  ``/tmp/mysql.sock``.
optional: true
default: /tmp
---
program: mongosqld
name: config
directive: option
args: <path>
description: |
  Specifies the path to a :ref:`configuration file <config-format>`.
optional: true
---
directive: setting
program: conf
name: runtime.memory.maxPerStage
type: integer
description: |
  Specifies the maximum amount of memory in bytes that a query execution
  stage may use.
default: unlimited
---
directive: setting
program: conf
name: runtime.memory.maxPerServer
type: integer
description: |
  .. versionadded:: 2.5

  Specifies the maximum amount of memory in bytes that a
  :binary:`~bin.mongosqld` process may use.
default: unlimited
---
directive: setting
program: conf
name: runtime.memory.maxPerConnection
type: integer
description: |
  .. versionadded:: 2.5

  Specifies the maximum amount of memory in bytes that a
  :binary:`~bin.mongosqld` client connection may use.
default: unlimited
---
program: mongosqld
name: maxVarcharLength
directive: option
args: <length>
description: |
  .. versionadded:: 2.2

  Specifies the maximum length, in characters, for all varchar fields. If
  {{program}} encounters a string that is longer than the maximum length,
  {{program}} truncates it to the maximum length and logs a warning.
optional: true
---
program: mongosqld
name: mongo-username
aliases: -u
directive: option
args: <username>
description: |
  .. versionadded:: 2.3

  Specifies the authentication username to use for schema discovery.
  Only required if :option:`--auth` is enabled. The user specified by
  ``--mongo-username`` must be a valid MongoDB user with the
  ``listDatabases`` privilege. See :ref:`mongosqld User
  Permissions <user-permissions>`.
---
program: mongosqld
name: mongo-password
aliases: -p
directive: option
args: <password>
description: |
  .. versionadded:: 2.3

  Specifies the authentication password to use for schema discovery.
  Only required if :option:`--auth` is enabled. Use in conjunction with
  :option:`--mongo-username`.
---
program: mongosqld
name: mongo-authenticationSource
directive: option
args: <auth-db-name>
description: |
  .. versionadded:: 2.3

  Specifies the database that holds the credentials for the schema
  discovery user. Only available if :option:`--auth` is enabled. Use
  in conjunction with credential options :option:`--mongo-username` and
  :option:`--mongo-password`.
default: admin
---
program: mongosqld
name: mongo-authenticationMechanism
directive: option
args: <authMechanism>
description: |
  .. versionadded:: 2.3

  Specifies the authentication mechanism to use for schema discovery.
  Only available if :option:`--auth` is enabled. Use in conjunction with
  credential options :option:`--mongo-username` and
  :option:`--mongo-password`.

  .. include:: /includes/auth-mechanisms.rst
default: SCRAM-SHA-1
---
program: mongosqld
name: serviceName
directive: option
args: <service-name>
description: |
  Name of the system service which runs :binary:`~bin.mongosqld`.
optional: true
---
program: mongosqld
name: serviceDisplayName
directive: option
args: <service-name>
description: |
  Display name of the system service which runs :binary:`~bin.mongosqld`.
optional: true
---
program: mongosqld
name: serviceDescription
directive: option
args: <service-name>
description: |
  Description of the system service which runs :binary:`~bin.mongosqld`.
optional: true
---
program: mongosqld
name: gssapiHostname
directive: option
args: <hostname>
description: |
  .. versionadded:: 2.5

  An :abbr:`FQDN (fully qualified domain name)` for the purpose of
  configuring Kerberos authentication. The Kerberos hostname overrides
  the hostname only for the configuration of Kerberos.

optional: true
default: First IP address for :setting:`net.bindIp`.
---
program: mongosqld
name: gssapiConstrainedDelegation
directive: option
description: |
  .. versionadded:: 2.11

  Use proxy credentials for Kerberos authorization, enabling constrained
  delegation. Requires :binary:`~bin.mongosqld` service credentials to be
  present in the client keytab as well as the service keytab. See
  :ref:`configure-kerberos` for more information about Kerberos configuration.

optional: true
default: false
---
program: mongosqld
name: gssapiServiceName
directive: option
args: <service-name>
description: |
  .. versionadded:: 2.5

  Registered name of the service using Kerberos. This option allows 
  you to override the default Kerberos service name component of the 
  Kerberos :abbr:`SPN (service principal name)`, on a per-instance 
  basis. If unspecified, the default value is used.

optional: true
default: mongosql
---
program: mongosqld
name: mongo-gssapiServiceName
directive: option
args: <service-name>
description: |
  .. versionadded:: 2.5

  Set the Kerberos :abbr:`SPN (service principal name)` when connecting
  to Kerberized MongoDB instances. This value must match the service
  name set on MongoDB instances.
optional: true
default: mongodb
---
program: mongosqld
name: prejoin
directive: option
args: null
description: |
  .. versionadded:: 2.6

  Schema option for combining array and non-array data into a
  single table.

  MongoDB documents which contain arrays are normally translated
  into tabular format with separate tables for array data and
  non-array data. Consider a MongoDB collection named ``test``
  with the following document:

  .. code-block:: json
     :copyable: false

     { "_id" : 1, "a" : 3, "b" : [ "orange", "apple", "pear" ] }

  The above collection translates to the following two tables in
  tabular format:

  .. code-block:: none
     :copyable: false

     mysql> select * from test;
     +------+------+
     | _id  | a    |
     +------+------+
     |    1 |    3 |
     +------+------+

     mysql> select * from test_b;
     +------+--------+-------+
     | _id  | b      | b_idx |
     +------+--------+-------+
     |    1 | orange |     0 |
     |    1 | apple  |     1 |
     |    1 | pear   |     2 |
     +------+--------+-------+

  The :option:`--prejoin <mongosqld --prejoin>` flag causes
  data from the ``a`` column to be included in the ``test_b`` table:

  .. code-block:: none
     :copyable: false

     mysql> select * from test_b;
     +------+------+--------+-------+
     | _id  | a    | b      | b_idx |
     +------+------+--------+-------+
     |    1 |    3 | orange |     0 |
     |    1 |    3 | apple  |     1 |
     |    1 |    3 | pear   |     2 |
     +------+------+--------+-------+

optional: true
---
program: mongosqld
name: setParameter
directive: option
args: <parameter>
description: |
  .. list-table::
   :header-rows: 1
   :widths: 50 10 40

   * - Parameter
     - Type
     - Corresponds to

   * - ``"polymorphic_type_conversion_mode=<value>"``
     - string
     - .. include:: /includes/fact-polymorphic-type-conversion-mode.rst

   * - ``"type_conversion_mode=<value>"``
     - string
     - .. include:: /includes/fact-type-conversion-mode.rst

  The following example starts :binary:`~bin.mongosqld` and uses
  the ``--setParameter`` option to specify the
  :doc:`type conversion mode </reference/type-conversion>`:

  .. code-block:: sh

      mongosqld --setParameter "type_conversion_mode=mongosql"

optional: true
...
