program: mongotranslate
name: query
directive: option
description: |
  Specifies a SQL query to translate into a MongoDB aggregation
  pipeline. Either ``--query`` or :option:`--queryFile
  <mongotranslate --queryFile>` is required.
---
program: mongotranslate
name: queryFile
directive: option
description: |
  Specifies a path to a file containing a SQL query to translate
  into a MongoDB aggregation pipeline. Either :option:`--query
  <mongotranslate --query>` or ``--queryFile`` is required.
---
program: mongotranslate
name: schema
directive: option
description: |
  *Required.* Specifies a ``.drdl`` schema file or a directory
  containing one or more ``.drdl`` schema files created by the
  :binary:`~bin.mongodrdl` program to use when translating a
  SQL query into an aggregation pipeline.
---
program: mongotranslate
name: format
directive: option
default: |
  ``multiline``
description: |
  *Optional.* Valid options are ``none`` and ``multiline``. The
  default ``multiline`` option displays results in a more easily
  readable format.
  
  .. list-table::
     :header-rows: 1
     :widths: 30 30 40

     * - Command Type
       - Option
       - Description

     * - Without the :option:`--explain <mongotranslate --explain>` option 
       - ``--format none``
       - Returns an aggregation pipeline all on one line.

     * - Without the :option:`--explain <mongotranslate --explain>` option
       - ``--format multiline``
       - Returns an aggregation pipeline with one pipeline
         stage per line.

     * - With the :option:`--explain <mongotranslate --explain>` option 
       - ``--format none``
       - Returns all fields on one line.

     * - With the :option:`--explain <mongotranslate --explain>` option
       - ``--format multiline``
       - Returns one field per line, with additional formatting for
         arrays and object subfields.
---
program: mongotranslate
name: explain
directive: option
description: |
  *Optional.* Returns the ``explain`` output for the query plan
  instead of the translated aggregation pipeline. Using
  ``--explain`` returns similar output to running ``EXPLAIN <query>``
  on a BI tool connected to |bi-short|.
---
program: mongotranslate
name: mongoversion
directive: option
default: |
  ``latest``
description: |
  *Optional.* Returns an aggregation pipeline compatible with the
  specified MongoDB version. Acceptable values include:

  - ``3.2``
  - ``3.4``
  - ``3.6``
  - ``4.0``
  - ``latest``

  The default value is ``latest``.
---
program: mongotranslate
name: dbName
directive: option
default: |
  ``test``
description: |
  The database name to use for unqualified table names in the SQL
  query.

  The following example uses a collection named ``fruit`` and the
  ``--dbName`` option to specify that ``fruit`` is in the ``groceries``
  database:

  .. code-block:: none

     mongotranslate "SELECT * FROM fruit WHERE _id > 100;" \
       --schema schema.drdl --dbName groceries

  If you do not use the ``--dbName`` option to specify a database,
  ``mongotranslate`` assumes that ``fruit`` is in the ``test``
  database. If the schema does not contain a database named ``test``,
  or a table name ``fruit`` in the ``test`` database,
  ``mongotranslate`` returns an error.

  The following example uses a fully-qualified table name, so it does
  not need the ``--dbName`` option.

  .. code-block:: sql

     mongotranslate "SELECT * FROM groceries.fruit WHERE _id > 100;" \
       --schema schema.drdl

  If you specify a database with each table name in your SQL query, the
  ``--dbName`` option is ignored if it is used.
...
